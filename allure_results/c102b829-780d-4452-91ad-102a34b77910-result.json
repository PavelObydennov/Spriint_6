{"name": "Тест клика по вопросам и проверки ответов", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div id=\"accordion__heading-1\" aria-disabled=\"false\" aria-expanded=\"false\" aria-controls=\"accordion__panel-1\" role=\"button\" tabindex=\"0\" class=\"accordion__button\" data-accordion-component=\"AccordionItemButton\">...</div> is not clickable at point (598, 846). Other element would receive the click: <div class=\"\">...</div>\n  (Session info: chrome=131.0.6778.205)\nStacktrace:\n\tGetHandleVerifier [0x00333433+25059]\n\t(No symbol) [0x002BCE34]\n\t(No symbol) [0x0019BEC3]\n\t(No symbol) [0x001E5D37]\n\t(No symbol) [0x001E4189]\n\t(No symbol) [0x001E1DAD]\n\t(No symbol) [0x001E10AF]\n\t(No symbol) [0x001D5FD7]\n\t(No symbol) [0x00201EFC]\n\t(No symbol) [0x001D5A24]\n\t(No symbol) [0x00202194]\n\t(No symbol) [0x0021B51E]\n\t(No symbol) [0x00201C96]\n\t(No symbol) [0x001D3FAC]\n\t(No symbol) [0x001D4F3D]\n\tGetHandleVerifier [0x00625593+3113795]\n\tGetHandleVerifier [0x0063A25A+3198986]\n\tGetHandleVerifier [0x00632A32+3168226]\n\tGetHandleVerifier [0x003D32A0+680016]\n\t(No symbol) [0x002C577D]\n\t(No symbol) [0x002C2A28]\n\t(No symbol) [0x002C2BC5]\n\t(No symbol) [0x002B5820]\n\tBaseThreadInitThunk [0x76E3FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x7782809E+286]\n\tRtlGetAppContainerNamedObjectPath [0x7782806E+238]\n\t(No symbol) [0x00000000]", "trace": "self = <tests.test_general_page.TestGeneralPage object at 0x0000018B462A9040>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"93ac52eec39fba10f2798d812eac85a1\")>\nquestion_locator = ('id', 'accordion__heading-1'), answer_locator = ('id', 'accordion__panel-1')\nexpected_answer = 'Пока что у нас так: один заказ — один самокат. Если хотите покататься с друзьями, можете просто сделать несколько заказов — один за другим.'\n\n    @pytest.mark.parametrize(\n        \"question_locator, answer_locator, expected_answer\",\n        [\n            (GeneralPageLocators.question_one, GeneralPageLocators.answer_one, 'Сутки — 400 рублей. Оплата курьеру — наличными или картой.'),\n            (GeneralPageLocators.question_two, GeneralPageLocators.answer_two, 'Пока что у нас так: один заказ — один самокат. Если хотите покататься с друзьями, можете просто сделать несколько заказов — один за другим.'),\n            (GeneralPageLocators.question_three, GeneralPageLocators.answer_three, 'Допустим, вы оформляете заказ на 8 мая. Мы привозим самокат 8 мая в течение дня. Отсчёт времени аренды начинается с момента, когда вы оплатите заказ курьеру. Если мы привезли самокат 8 мая в 20:30, суточная аренда закончится 9 мая в 20:30.'),\n            (GeneralPageLocators.question_four, GeneralPageLocators.answer_four, 'Только начиная с завтрашнего дня. Но скоро станем расторопнее.'),\n            (GeneralPageLocators.question_five, GeneralPageLocators.answer_five, 'Пока что нет! Но если что-то срочное — всегда можно позвонить в поддержку по красивому номеру 1010.'),\n            (GeneralPageLocators.question_six, GeneralPageLocators.answer_six, 'Самокат приезжает к вам с полной зарядкой. Этого хватает на восемь суток — даже если будете кататься без передышек и во сне. Зарядка не понадобится.'),\n            (GeneralPageLocators.question_seven, GeneralPageLocators.answer_seven, 'Да, пока самокат не привезли. Штрафа не будет, объяснительной записки тоже не попросим. Все же свои.'),\n            (GeneralPageLocators.question_eight, GeneralPageLocators.answer_eight, 'Да, обязательно. Всем самокатов! И Москве, и Московской области.')\n        ]\n    )\n    @allure.title('Тест клика по вопросам и проверки ответов')\n    def test_click_question(self, driver, question_locator, answer_locator, expected_answer):\n        # Инициализация страницы\n        general_page = GeneralPage(driver)\n    \n        # Скроллим к элементу вопроса\n        general_page.scroll_to_bottom()\n    \n        # Нажимаем на вопрос\n>       general_page.click_question(question_locator)\n\ntests\\test_general_page.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\general_page.py:57: in click_question\n    self.wait_and_click(question_locator)\npages\\general_page.py:78: in wait_and_click\n    self.wait_for(EC.element_to_be_clickable(locator), timeout).click()\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000018B462EBF20>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...jectPath [0x7782809E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7782806E+238]\\\\n\\\\t(No symbol) [0x00000000]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div id=\"accordion__heading-1\" aria-disabled=\"false\" aria-expanded=\"false\" aria-controls=\"accordion__panel-1\" role=\"button\" tabindex=\"0\" class=\"accordion__button\" data-accordion-component=\"AccordionItemButton\">...</div> is not clickable at point (598, 846). Other element would receive the click: <div class=\"\">...</div>\nE         (Session info: chrome=131.0.6778.205)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00333433+25059]\nE       \t(No symbol) [0x002BCE34]\nE       \t(No symbol) [0x0019BEC3]\nE       \t(No symbol) [0x001E5D37]\nE       \t(No symbol) [0x001E4189]\nE       \t(No symbol) [0x001E1DAD]\nE       \t(No symbol) [0x001E10AF]\nE       \t(No symbol) [0x001D5FD7]\nE       \t(No symbol) [0x00201EFC]\nE       \t(No symbol) [0x001D5A24]\nE       \t(No symbol) [0x00202194]\nE       \t(No symbol) [0x0021B51E]\nE       \t(No symbol) [0x00201C96]\nE       \t(No symbol) [0x001D3FAC]\nE       \t(No symbol) [0x001D4F3D]\nE       \tGetHandleVerifier [0x00625593+3113795]\nE       \tGetHandleVerifier [0x0063A25A+3198986]\nE       \tGetHandleVerifier [0x00632A32+3168226]\nE       \tGetHandleVerifier [0x003D32A0+680016]\nE       \t(No symbol) [0x002C577D]\nE       \t(No symbol) [0x002C2A28]\nE       \t(No symbol) [0x002C2BC5]\nE       \t(No symbol) [0x002B5820]\nE       \tBaseThreadInitThunk [0x76E3FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x7782809E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x7782806E+238]\nE       \t(No symbol) [0x00000000]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException"}, "steps": [{"name": "Прокрутка страницы до низа", "status": "passed", "start": 1736434978391, "stop": 1736434981003}, {"name": "Нажатие на вопрос", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div id=\"accordion__heading-1\" aria-disabled=\"false\" aria-expanded=\"false\" aria-controls=\"accordion__panel-1\" role=\"button\" tabindex=\"0\" class=\"accordion__button\" data-accordion-component=\"AccordionItemButton\">...</div> is not clickable at point (598, 846). Other element would receive the click: <div class=\"\">...</div>\n  (Session info: chrome=131.0.6778.205)\nStacktrace:\n\tGetHandleVerifier [0x00333433+25059]\n\t(No symbol) [0x002BCE34]\n\t(No symbol) [0x0019BEC3]\n\t(No symbol) [0x001E5D37]\n\t(No symbol) [0x001E4189]\n\t(No symbol) [0x001E1DAD]\n\t(No symbol) [0x001E10AF]\n\t(No symbol) [0x001D5FD7]\n\t(No symbol) [0x00201EFC]\n\t(No symbol) [0x001D5A24]\n\t(No symbol) [0x00202194]\n\t(No symbol) [0x0021B51E]\n\t(No symbol) [0x00201C96]\n\t(No symbol) [0x001D3FAC]\n\t(No symbol) [0x001D4F3D]\n\tGetHandleVerifier [0x00625593+3113795]\n\tGetHandleVerifier [0x0063A25A+3198986]\n\tGetHandleVerifier [0x00632A32+3168226]\n\tGetHandleVerifier [0x003D32A0+680016]\n\t(No symbol) [0x002C577D]\n\t(No symbol) [0x002C2A28]\n\t(No symbol) [0x002C2BC5]\n\t(No symbol) [0x002B5820]\n\tBaseThreadInitThunk [0x76E3FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x7782809E+286]\n\tRtlGetAppContainerNamedObjectPath [0x7782806E+238]\n\t(No symbol) [0x00000000]\n\n", "trace": "  File \"S:\\IT\\Spriint_6-main\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"S:\\IT\\Spriint_6-main\\pages\\general_page.py\", line 57, in click_question\n    self.wait_and_click(question_locator)\n  File \"S:\\IT\\Spriint_6-main\\pages\\general_page.py\", line 78, in wait_and_click\n    self.wait_for(EC.element_to_be_clickable(locator), timeout).click()\n  File \"S:\\IT\\Spriint_6-main\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"S:\\IT\\Spriint_6-main\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"S:\\IT\\Spriint_6-main\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"S:\\IT\\Spriint_6-main\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "question_locator", "value": "('id', 'accordion__heading-1')"}], "start": 1736434981004, "stop": 1736434982154}], "parameters": [{"name": "driver", "value": "'chrome'"}, {"name": "question_locator", "value": "('id', 'accordion__heading-1')"}, {"name": "answer_locator", "value": "('id', 'accordion__panel-1')"}, {"name": "expected_answer", "value": "'Пока что у нас так: один заказ — один самокат. Если хотите покататься с друзьями, можете просто сделать несколько заказов — один за другим.'"}], "start": 1736434978391, "stop": 1736434982167, "uuid": "16f07f47-4d2d-4143-8bb5-9dc792b193ee", "historyId": "7a509a7f5f7befe25cd31d80f3eb3c86", "testCaseId": "405398eb70b5d4775c4b48951c5d260e", "fullName": "tests.test_general_page.TestGeneralPage#test_click_question", "labels": [{"name": "feature", "value": "Проверка работоспособности кнопок \"Вопросы о важном\""}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_general_page"}, {"name": "subSuite", "value": "TestGeneralPage"}, {"name": "host", "value": "DESKTOP-A8S1R1F"}, {"name": "thread", "value": "2016-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_general_page"}]}